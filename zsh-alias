alias reload-alias='source $HOME/.zsh-alias'

alias rm='rm -i'
alias mv='mv -i'
alias cp='cp -i'
alias mkdir='mkdir -p'
alias lt='tree -L 1'

alias ls-empty='find . -type f -empty -exec ls -l {} \;'
alias rm-empty='find . -type f -empty -delete'
alias rm-empty-dir='find . -type d -empty -delete'

alias timestamp='date +%s'

alias iex='rlwrap -a iex'
alias pry='rlwrap -a pry'
alias erl='rlwrap -a erl'

alias pull='git pull'
alias push='git push'
alias st='git status -sb'
alias ci='git commit'

datetime(){
    date -d@$1 +%Y-%m-%d\ %H:%M:%S
}

alias vi="vim"
alias e='emacs -nw'
alias j="jobs -l"
alias grep='grep --colour'
alias grep-coffee='grep --include="*.coffee"'
alias grep-php='grep --include="*.php"'
alias grep-js='grep --include="*.js"'

alias short-line='awk "length < 200"'

alias leiser='amixer -q -c 0 sset Master 5%- unmute'
alias lauter='amixer -q -c 0 sset Master 5%+ unmute'

alias total-play-time='bc <<< "$(find -name "*.mp3" -print0 | xargs -0 mp3info -p "%S\n" | paste -sd+ | bc) / 60" '

alias vbox='VBoxManage startvm'
alias vbox-list="VBoxManage -nologo list vms"
alias nb='newsbeuter'
alias pb='podbeuter'
alias docker='sudo docker.io'

alias curl-json="curl -H 'Content-Type: applicaiton/json' "
alias curl-ajax="curl -H 'X-Requested-With: XMLHttpRequest' "

alias svn-url='svn info | grep -i url | cut -d " " -f 2'

alias bc='bc -ql'

alias unrar-anyway='unrar x -kb -y'

alias droid='adb shell busybox'
alias dbox='dropbox'

alias start-adb='sudo `which adb` start-server'

alias dbox-crazy='echo 100000 | sudo tee /proc/sys/fs/inotify/max_user_watches'

alias psc='ps xawf -eo pid,user,cgroup,args'

alias mem-usage="ps aux | awk '{sum +=\$4}; END {print sum}'"

alias privoxy-socks="privoxy $HOME/.privoxy.conf"

if [ -e /usr/bin/service ]; then
    start(){ sudo service $1 start }
    status(){ sudo service $1 status }
    stop(){ sudo service $1 stop }
    restart(){ sudo service $1 restart }
    reload(){ sudo service $1 reload }
fi

if [ -e /usr/bin/systemctl ]; then
    alias start='sudo systemctl start'
    alias stop='sudo systemctl stop'
    alias status='sudo systemctl status'
    alias restart='sudo systemctl restart'
fi

# Automatically background processes (no output to terminal etc)
alias z='echo $RANDOM > /dev/null; zz'
zz() {
    echo $*
    $* &> "/tmp/z-$1-$RANDOM" &!
}

for i in mupdf zathura; do
    alias "$i=z $i"
done

GRC=`which grc`
if [ $? = 0 ]; then
    alias colourify="$GRC -es --colour=auto"
    alias diff='colourify diff'
    alias make='colourify make'
    # alias gcc='colourify gcc'
    alias g++='colourify g++'
    alias as='colourify as'
    alias ld='colourify ld'
    alias netstat='colourify netstat'
    alias ping='colourify ping'
    alias traceroute='colourify /usr/sbin/traceroute'
fi

view-tex(){
    xelatex "$1" && mupdf "${1%.*}.pdf"
}

# uname -a | grep -i ubuntu > /dev/null && alias 'pkg-install=sudo apt-get install'
# uname -a | grep -i ubuntu > /dev/null && alias 'pkg-search=apt-cache search'

which apt-get &> /dev/null
if [ $? = 0 ]; then
    yaourt-install(){
        results="$(apt-cache search $1)"
        echo "$results" | nl -w 3 -s ': ' | sed -e "s/[0-9]\+:/\x1b[32m&\x1b[0m/" 
        echo -n "===> "
        read num
        if [[ "$num" =~ ^[0-9]+$ ]]; then
            selected=$(sed -n "$num s/\([^ ]\) .*/\1/p" <<< "$results")
            echo "selected package: $selected"
            sudo apt-get install $selected
        fi
    }
    yaourt-remove(){
        results="$(dpkg --get-selections | grep -i $1 | grep -v deinstall | cut -f 1)"
        echo "$results" | nl -w 3 -s ': ' | sed -e "s/[0-9]\+:/\x1b[32m&\x1b[0m/" 
        echo -n "===> "
        read num
        if [[ "$num" =~ ^[0-9]+$ ]]; then
            selected=$(sed -n "$num s/\([^ ]\) .*/\1/p" <<< "$results")
            selected=$(sed -n "$num p" <<< "$results")
            echo "selected package: $selected"
            sudo apt-get remove $selected
        fi
    }
    yaourt-upgrade(){
        sudo apt-get upgrade
    }
    yaourt(){
        case $1 in
            -R)
                yaourt-remove $2
                ;;
            -Syu)
                yaourt-upgrade
                ;;
            *)
                yaourt-install $1
        esac
    }
fi

which apt-get &> /dev/null
if [ $? = 0 ]; then
    alias get='sudo apt-get install'
fi

alias chrome='z chromium-browser --disk-cache-dir="/dev/shm/chrome/" &'
alias chrome-proxy='z chromium-browser --disk-cache-dir="/dev/shm/chrome/" --proxy-server="socks5://localhost:7070" &'
alias chrome-dev='z chromium-browser --disk-cache-dir="/dev/shm/chrome/" --allow-file-access-from-files  --disable-web-security --remote-debugging-port=9222 &'

alias play2='mplayer -ao alsa:device=hw=2.0'
alias mpv='VDPAU_DRIVER=va_gl mpv'
alias play='mplayer'
alias play-shuffle='mplayer -shuffle -playlist <(find $(pwd) -iname \*.mp3)'

alias datafart='curl --data-binary @- datafart.com'

alias notebook='ipython notebook --pylab=inline'
alias cling='cling  -Wc++11-extensions -std=c++11'

alias phplint='find . -name "*.php" -exec php -l {} \; | grep -v "No syntax errors detected in"'
alias composer='composer.phar'
alias get-composer='curl -s https://getcomposer.org/installer | php'
# alias composer='php composer.phar'

alias last-ips="last | awk '{print \$3}' | sort | uniq -c | sort -rnk1"


alias secure="chmod 600 $1"

ghc-run(){
    ghc --make $1 && "./${1%.*}"
}

whichweek(){
    week=`date -d "now" +%U`
    echo "$week + 1" | bc
}

svn-add-all(){
    svn st | grep '^?' | sed 's/^?[ \t]\+//' | xargs -i svn add {}
}

svn-diff-by-extension(){
    exts='';
    for i in "$@"; do
        if [ -z "$exts" ]; then
            exts="$exts -iname \"*.$i\"";
        else
            exts="$exts -o -iname \"*.$i\"";
        fi
    done;
    svn diff $(eval "find -type f $exts")
}

svn-export-changed()
{
    url=$3
    for i in $(svn diff --summarize -r $1:$2 $url| awk '{ print $2 }' | sed -e's/%\([0-9A-F][0-9A-F]\)/\\\\\x\1/g' | xargs echo -e); do
        p=$(echo $i | sed -e 's{'$url/'{{');
        mkdir -p $(dirname $p);
        svn export $i $p;
    done 
}

start-wicd(){
    sudo wicd
    wicd-cli --wireless -c
}

quote(){
    curl --silent http://hackersays.com/quote | json c a
}


# A shortcut function that simplifies usage of xclip.
# - Accepts input from either stdin (pipe), or params.
# ------------------------------------------------
cb() {
  local _scs_col="\e[0;32m"; local _wrn_col='\e[1;31m'; local _trn_col='\e[0;33m'
  # Check that xclip is installed.
  if ! type xclip > /dev/null 2>&1; then
    echo -e "$_wrn_col""You must have the 'xclip' program installed.\e[0m"
  # Check user is not root (root doesn't have access to user xorg server)
  elif [[ "$USER" == "root" ]]; then
    echo -e "$_wrn_col""Must be regular user (not root) to copy a file to the clipboard.\e[0m"
  else
    # If no tty, data should be available on stdin
    if ! [[ "$( tty )" == /dev/* ]]; then
      input="$(< /dev/stdin)"
    # Else, fetch input from params
    else
      input="$*"
    fi
    if [ -z "$input" ]; then  # If no input, print usage message.
      echo "Copies a string or the contents of a file to the clipboard."
      echo "Usage: cb <string or file>"
      echo "       echo <string or file> | cb"
    else
      # Copy input to clipboard
      echo -n "$input" | xclip -selection c
      # Truncate text for status
      if [ ${#input} -gt 80 ]; then input="$(echo $input | cut -c1-80)$_trn_col...\e[0m"; fi
      # Print status.
      echo -e "$_scs_col""Copied to clipboard:\e[0m $input"
    fi
  fi
}

wiki() {
    dig +short txt $1.wp.dg.cx
}

wiki-entry() {
    if [ -z "$WIKI_ROOT" ]; then
        echo "you have to set \$WIKI_ROOT"
        return 1
    fi
    if [ -z "$1" ]; then
        return 1
    fi
    entries="$(find $WIKI_ROOT -iname "*$1*" -type f)"
}

qq-dict() {
    curl -s "http://dict.qq.com/dict?q=$1"
}

bing-dict() {
    elinks -dump "http://www.bing.com/dict/search?q=$1" | less
}

alias define=bing-dict

givedef(){
    if [[ $# -ge 2 ]] then
        echo "givedef: too many arguments" >&2
        return 1
    else
        curl "dict://dict.org/d:$1"
    fi
}

git-sync() {
    message=$1
    if [ -z "$message" ]; then
        message='sync'
    fi
    git add .
    git ci -am "$message"
    git push
}

min-and-gzipped() {
    uglifyjs $1 | gzip -c | wc -c
}

f(){
    find . -iname "*$1*"
}

runc(){
    cc -Wall -g $1.c -o $1.out && ./$1.out
    rm -f $1.out
}

ignore(){
    touch .gitignore
    cat >> .gitignore <<EOF
*.pyc
/venv/
/node_modules/
/npm-debug.log
/vendor/
bower_components/
.lock.pid
.module-cache/
EOF
    $EDITOR .gitignore
}

init-venv2(){
    virtualenv -p $(which python2) venv
    activate-venv
}

init-venv(){
    virtualenv -p $(which python3) venv
    activate-venv
}

activate-venv(){
    if [ -z "$VENV_ACTIVATED" ]; then
        echo "activate virtualenv?"
        select yn in "Yes" "No"; do
            case $yn in
                Yes)
                    source .venv/bin/activate;break;
                    export VENV_ACTIVATED="$(pwd)";
                    break;;
                No)
                    break;;
             esac
        done
    else
        echo "venv (from $VENV_ACTIVATED) already activated"
    fi
}

load_env_sh(){
    if [ -z "$ENVSH_SOURCED" ]; then
        echo "source env.sh?"
        select yn in "Yes" "No"; do
            case $yn in
                Yes)
                    source env.sh;
                    export ENVSH_SOURCED="$(pwd)";
                    break;;
                No)
                    break;;
             esac
        done
    else
        echo "env.sh (from $ENVSH_SOURCED) already sourced"
    fi
}

chpwd(){
    if [ -f .venv/bin/activate ]; then
        activate-venv
    fi
    if [ -f env.sh ]; then
        load_env_sh
    fi
    if [ -f .virthualenv/bin/activate ]; then
        activate-virthualenv
    fi

    if [ -n "$INSIDE_EMACS" ]; then
        print -P "\033AnSiTc %d"
    fi
}

duration(){
    ffprobe "$1" 2>&1 | grep -i duration
}

hourglass(){ trap 'tput cnorm' EXIT INT;local s=$(($SECONDS +$1));(tput civis;while [[ $SECONDS -lt $s ]];do for f in '|' '\' '-' '/';do echo -n "$f" && sleep .2s && echo -n $'\b';done;done;);tput cnorm;}

uncommited(){
    for gitdir in `find ./ -maxdepth 2 -name .git`; 
    do
        workdir=${gitdir%/*}; 
        echo;
        echo $workdir; 
        git --git-dir=$gitdir --work-tree=$workdir status; 
    done
}

list-git-repos(){
    for gitdir in `find ./ -maxdepth 2 -name .git`;
    do
        workdir=${gitdir%/*};
        git --git-dir=$gitdir --work-tree=$workdir config --get remote.origin.url
    done
}

list-clj-projects(){
    find ./ -maxdepth 2 -name project.clj
}

github-clone(){
    git clone git@github.com:$1/$2.git
}

bitbucket-username(){
    if [ -z "$BITBUCKET_USERNAME" ]; then
        export BITBUCKET_USERNAME=$(cat $HOME/.bitbucket-username)
    fi
    echo $BITBUCKET_USERNAME
}

bitbucket-passwd(){
    if [ -z "$BITBUCKET_PASSWD" ]; then
        export BITBUCKET_PASSWD=$(cat $HOME/.bitbucket-passwd)
    fi
    echo $BITBUCKET_PASSWD
}

bitbucket-setup(){
    echo -n "username: "
    read username
    echo -n "passwd: "
    read -s password
    echo $username >! $HOME/.bitbucket-username
    echo $password >! $HOME/.bitbucket-passwd
    chmod 600 $HOME/.bitbucket-username
    chmod 600 $HOME/.bitbucket-passwd
}

bitbucket-list(){
    curl -s --user "$(bitbucket-username):$(bitbucket-passwd)" https://api.bitbucket.org/1.0/user/repositories | json | sed -n '/name/ s/^[^:]\+\: \"\([a-zA-Z0-9_-]\+\)\"\,/\1/p'
}

bitbucket-new(){
    name=$1
    is_private=$2
    if [ -z "$is_private" ]; then
        is_private='true'
    fi
    scm=$3
    if [ -z "$scm" ]; then
        scm='git'
    fi
    curl -s --user "$(bitbucket-username):$(bitbucket-passwd)" https://api.bitbucket.org/1.0/repositories/ --data "name=$name;is_private=$is_private;scm=$scm"
}

bitbucket-delete(){
    repo_name=$1
    curl -s -X DELETE --user "$(bitbucket-username):$(bitbucket-passwd)" https://api.bitbucket.org/1.0/repositories/$(bitbucket-username)/$repo_name
}

bitbucket-clone(){
    git clone git@bitbucket.org:$(bitbucket-username)/$1.git
}

bitbucket-add-remote(){
    git remote add origin ssh://git@bitbucket.org/$(bitbucket-username)/$1.git
}

rename-after-time(){
    target="$(dirname $1)/$(date -d now +%Y-%m-%d-%H-%M-%S).${1##*.}"
    mv "$1" "$target"
    echo "$target"
}

shot(){
    mplayer -vo jpeg -frames 2 tv:// &> /dev/null
    rm -f 00000001.jpg
    img="$(rename-after-time 00000002.jpg)"
    if [ -n "$1" ]; then
        mv "$img" "$1"
        img="$1/$img"
    fi
    echo "$img"
}

pdf-compress(){
    gs -sDEVICE=pdfwrite -dCompatibilityLevel=1.4 -dPDFSETTINGS=/screen -dNOPAUSE -dQUIET -dBATCH -sOutputFile=$2 $1
}

pdf-concat(){
    for pdf in $*; do
        pdf2ps $pdf
    done
    rm merged.ps
    cat *.ps > merged.ps
    ps2pdf merged.ps
}


_mux(){
    _arguments ":::($(mux ls | tail -n +2))"
}
compdef _mux mux

_pman(){
    _arguments ":::($(php -r 'echo implode(PHP_EOL,get_defined_functions()["internal"]);'))"
}
compdef _pman pman

wget-proxy(){
    url="$1"
    name="/tmp/wget-$2"
    host=${3:-proxy}
    ssh $host "wget -O $name '$url'"
    scp $host:$name $2
}

youtube-dl-proxy(){
    url="$1"
    name="/tmp/youtube-dl-$2"
    server=${3:-proxy}
    ssh $server "youtube-dl -o $name '$url'"
    scp $server:$name $2
}

redis-eval(){
    redis-cli eval "$(cat $1)" "${@:2}"
}

# setopt NO_GLOB
command_not_found_handler() {
    case ${1: -1} in
        \?)
            man ${1:0: -1}
            ;;
        !)
            tsocks ${1:0: -1} ${@:2}
            ;;
        +)
            ;;
        *)
            case ${1:0:1} in
                @)
                    ssh ${1:1} "${@:2}"
                    ;;
                *)
                    exit 1
            esac
    esac
}

urls()
{
    results="$(tmux capture-pane \; show-buffer -b0 \; delete-buffer -b0 \
        | grep -P -o '(?:https?://|\bwww\.)[a-zA-Z0-9\-\@;\/?:&=%\$_.+!*\x27,~#]*(\([a-zA-Z0-9\-\@;\/?:&=%\$_.+!*\x27,~#]*\)|[a-zA-Z0-9\-\@;\/?:&=%\$_+*~])+' \
        | sort | uniq)"
    echo "$results" | nl -w 3 -s ': ' | sed -e "s/[0-9]\+:/\x1b[32m&\x1b[0m/" 
    echo -n "===> "
    read num
    if [[ "$num" =~ ^[0-9]+$ ]]; then
        selected=$(sed -n "$num p" <<< "$results")
        xdg-open $selected
    fi
}

memcached-flush(){
    php -r '$m = new Memcached; $m->addServer("localhost",11211); $m->deleteMulti($m->getAllKeys());'
}

memcached-keys(){
    php -r '$m = new Memcached; $m->addServer("localhost",11211); echo implode("\n",$m->getAllKeys());'
}

haxe-js(){
    class=${1%.*}
    haxe -js $class.js -main $class $1 && node $class.js
}

output-list() {
    xrandr --current | grep connected | grep -v disconnected | awk '{print $1}'
}

output-list-all() {
    xrandr --current | grep connected | awk '{print $1}'
}

output-dual() {
    primary=$1
    secondary=$2
    xrandr --output $primary --primary --left-of $secondary --output $secondary --auto
}
_outputs(){
    _arguments '1: :->primary' '2: :->secondary'
    case $state in
        primary)
            _arguments "1: :($(output-list))"
            ;;
        secondary)
            compadd "$@" $(output-list | grep -v $words[2])
            ;;
    esac 
}
compdef _outputs output-dual

output-close() {
    xrandr --output $1 --off
}
_output(){
    _arguments ":::($(output-list))"
}
compdef _output output-close

output-switch() {
    xrandr --output $1 --primary --auto
}
_output_disconnected() {
    _arguments ":::($(output-list))"
}
compdef _output_disconnected output-switch

output-reset() {
    xrandr --auto
}

output-classic() {
    xrandr --output $1 --mode 640x480
}

output-brightness() {
    xrandr --output $1 --brightness "0.$2"
}
compdef _output output-brightness

upsidedown(){
    LD_PRELOAD=/usr/lib/i386-linux-gnu/libv4l/v4l1compat.so $*
}

bd(){
    cd $(pwd | sed 's|\(.*/'$1'[^/]*/\).*|\1|')
}

git-date(){
    commit=$1
    date="$2"
    git filter-branch --env-filter \
        'if [ $GIT_COMMIT = $commit ]
         then
            export GIT_AUTHOR_DATE="$date"
            export GIT_COMMITTER_DATE="$date"
         fi'
}

git-amend-date() {
    GIT_COMMITTER_DATE="$1 +0800" git commit --amend -C HEAD --date "$1 +0800"
}

nocolor(){
    sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"
}

ranger-cd(){
    tempfile='/tmp/ranger-chosendir'
    ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" && if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}

alias rcd=ranger-cd

setup-rbenv() {
    git clone git://github.com/sstephenson/rbenv.git ~/.rbenv
    mkdir -p ~/.rbenv/plugins
    git clone git://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
}

setup-pyenv() {
    git clone git://github.com/yyuu/pyenv.git ~/.pyenv
    sudo apt-get install libncursesw5-dev libreadline6-dev libssl-dev libgdbm-dev libc6-dev libsqlite3-dev liblzma-dev libz-dev libbz2-dev
}

setup-nvm() {
    git clone https://github.com/creationix/nvm ~/.nvm
}

setup-gvm() {
    bash < <(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
}

setup-git-extra() {
    cd /tmp && git clone --depth 1 https://github.com/visionmedia/git-extras.git && cd git-extras && sudo make install
}

setup-boot() {
    wget -c https://github.com/boot-clj/boot/releases/download/v2-r1/boot.sh -O boot
    chmod +x boot && sudo mv boot /usr/local/bin
}

html-coffee() {
    cat > $1.html << EOF
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title></title>
</head>
<body>
    
<script src="$1.js"></script>
</body>
</html>
EOF

touch $1.{coffee,js}
}

alias pip-install='pip install -r requirements.txt -i http://pypi.douban.com/simple'

alias get-bing-image='curl $(curl "http://www.bing.com/HPImageArchive.aspx?format=js&idx=0&n=1" | jq -r .images[0].url) > $(date -d now +%Y-%m-%d).jpg' 

qr() {
    content="$1"
    if [ -z "$content" ]; then
        content="$(xclip -o)"
    fi
    if [ -n "$content" ]; then
        qrencode "$content" -o /tmp/qrencode.png && qiv /tmp/qrencode.png
    else
        echo empty input
    fi
}

wlan-ip() {
    ifconfig | grep -A 1 wlan0 | tail -1 | awk '{print $2}' | cut -c6-
}

gg() {
    curl -Gs \
        -d v=1.0 \
        -d start=0 \
        -d rsz=6 \
        --data-urlencode q="$*" \
        http://ajax.googleapis.com/ajax/services/search/web | json responseData.results | json -a titleNoFormatting unescapedUrl content
}

cloc-all() {
    find -maxdepth 1 \! -iname ".*" \
        -printf "cloc %p | sed -n 9p | awk 'BEGIN{ORS=\" \"}{print \$5}';\necho %p | sed 's|^\\\\./||';\n" \
        | sh | sort -rnk1 | column -t | grep '^[0-9]\+'
}

alias tbl-header="sed -n '2 s/ *| */\n/pg' | sed -e '/^$/d'"

tbl-cell() {
    colnum=$(($1 + 1))
    rownum=${2:-1}
    rownum=$(($rownum + 3))
    sed -n "$rownum p" | cut -d'|' -f $colnum
}

tbl-row() {
    rownum=${1:-1}
    rownum=$(($rownum + 3))
    sed -n "$rownum p" | sed -n 's/ *| */\n/pg' | sed -e '/^$/d'
}

tbl-col() {
    colnum=${1:-1}
    colnum=$(($colnum + 1))
    head -n-1  | tail -n+4 | cut -d'|' -f $colnum
}

expand-tabs() {
    find . -name '*.'$1 ! -type d -exec bash -c 'expand -t 4 "$0" > /tmp/e && mv /tmp/e "$0"' {} \;
}

box-self-upgrade() {
    curl "https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh" -o $(which box)
}

ailas take-breaks='zz xwrits breaktime=:30 typetime=20 +lock'


ansible-role-init() {
    mkdir $1
    cd $1
    mkdir files handlers meta templates tasks vars
    cd ..
}

swap-caps-esc() {
    [[ -n $(xmodmap -pk | awk '$1 == 66 && $3 == "(Escape)"') ]] || xmodmap ~/.Xmodmap
}

proxied-git () {
    export GIT_PROXY_COMMAND=/tmp/git-proxy;

    if [ ! -f $GIT_PROXY_COMMAND ]; then
        cat > $GIT_PROXY_COMMAND <<EOF
#!/bin/bash
/bin/nc -x127.0.0.1:7070 -X5 \$*
EOF
        chmod +x $GIT_PROXY_COMMAND;
    fi

    git "$@"
}

alias get-prezto='git clone --recursive https://github.com/sorin-ionescu/prezto.git ~/.zprezto'

alias get-oh-my-zsh='git clone https://github.com/robbyrussell/oh-my-zsh ~/.oh-my-zsh'

kbd-backlight() {
    sudo bash -c 'echo 0 > /sys/class/leds/smc::kbd_backlight/brightness'
}

brightness() {
    sudo bash -c "echo $1 > /sys/class/backlight/mba6x_backlight/brightness"
}

alias super-caps='xcape -e "Control_L=Escape;Shift_R=Escape"'

alias smart-touch='syndaemon -Kdi 1'

vagrant-copy-id() {
    port=${1:-2222}
    ssh-keygen -f "/home/zf/.ssh/known_hosts" -R [127.0.0.1]:$port
    ssh-copy-id root@127.0.0.1 -p $port
}

alias tcpflow-on='sudo tcpflow -X /dev/null -i any -C -J port'

tcpdump-http() {
    port=${1:-80}
    sudo tcpdump -A -s 0 -i lo "tcp port $port and (((ip[2:2] - ((ip[0]&0xf)<<2)) - ((tcp[12]&0xf0)>>2)) != 0)"
}

mysql-create-user() {
    db=$1
    user=$2
    host=localhost
    echo -n "password for $user: "
    read password
    mysql -uroot -p -e "GRANT ALL PRIVILEGES ON $db.* TO $user@$host IDENTIFIED BY '$password'; FLUSH PRIVILEGES; SHOW GRANTS FOR $user@$host"
}

haxe-run() {
    haxe -js /tmp/haxe.js -main $1
    node /tmp/haxe.js
}

ip-info() {
    curl ipinfo.io/$(host $1| head -1 | awk '{print $4}')
}

mem-available() {
    awk '$1 == "MemAvailable:" { print $2 * 1024 }' /proc/meminfo | numfmt --to iec
}

mba-backlight() {
    if [ -z "$1" ]; then
        cat /sys/class/backlight/mba6x_backlight/brightness
    else
        sudo sh -c "echo $1 > /sys/class/backlight/mba6x_backlight/brightness"
    fi
}

mba-kbd-backlight() {
    sudo sh -c 'echo 0 > /sys/class/leds/smc::kbd_backlight/brightness'
}

use-local-http-proxy() {
    export http_proxy=127.0.0.1:8118
    export HTTP_PROXYS=127.0.0.1:8118
}

alias xev-simple="xev | grep -A2 --line-buffered '^KeyRelease' | sed -n '/keycode /s/^.*keycode \([0-9]*\).* (.*, \(.*\)).*$/\1 \2/p'"

alias emacs-server="env LC_CTYPE=zh_CN.UTF-8 emacs --daemon"

alias h2="java -jar $(find ~/.m2/repository/com/h2database/h2 -iname 'h2*.jar')"

alias lein-repl="lein trampoline repl"
